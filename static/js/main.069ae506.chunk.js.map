{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlnsvg","style","margin","background","display","xmlns","xmlnsXlink","version","width","height","viewBox","xmlSpace","x","y","fill","stopColor","d","fillRule","attributeName","type","from","to","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onError","updateChar","Math","floor","random","onCharLoading","then","catch","this","clearInterval","timerId","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","charList","newLoadingItem","charEnded","itemsRefs","setRefs","ref","push","onFocusCard","forEach","item","classList","remove","add","focus","onScroll","window","addEventListener","innerHeight","scrollY","document","body","offsetHeight","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","renderItems","arr","i","tabIndex","props","onSelectedChar","onKeyPress","e","key","removeEventListener","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.069ae506.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","class MarvelService {\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/'\n    _apiKey = 'apikey=97f79fa69b594ee154c959157e437a14'\n    _baseOffset = 210\n\n    getResource = async(url) => {\n        let res = await fetch(url);\n\n        if(!res.ok) {\n            throw new Error (`Could not fetch ${url}, status: ${res.status}`);\n        }\n\n        return await res.json();\n    }\n\n    getAllCharacters = async (offset = this._baseOffset) => {\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\n        return res.data.results.map(this._transformCharacter); \n    }\n   \n    getCharacter = async (id) => {\n        const res =  await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n        return this._transformCharacter(res.data.results[0]);\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)} ...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items.slice(0, 10)\n        }\n    }\n\n}\n\nexport default MarvelService;","const Spinner = () => {\n    return(\n        <svg className='spinner' xmlnsvg=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background:'none', display:'block'}}xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.0\" width=\"64px\" height=\"64px\" viewBox=\"0 0 128 128\" xmlSpace=\"preserve\"><rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"#FFFFFF\" /><g><linearGradient id=\"linear-gradient\"><stop offset=\"0%\" stopColor=\"#ffffff\"/><stop offset=\"100%\" stopColor=\"#000000\"/></linearGradient><path d=\"M63.85 0A63.85 63.85 0 1 1 0 63.85 63.85 63.85 0 0 1 63.85 0zm.65 19.5a44 44 0 1 1-44 44 44 44 0 0 1 44-44z\" fill=\"url(#linear-gradient)\" fillRule=\"evenodd\"/><animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 64 64\" to=\"360 64 64\" dur=\"1080ms\" repeatCount=\"indefinite\"></animateTransform></g></svg>\n    )\n    \n}\n\nexport default Spinner;\n\n","export default __webpack_public_path__ + \"static/media/error.fd98ce08.gif\";","   import img from './error.gif';\n   \n    const ErrorMessage = () => {\n       return (\n           <img style={{display:'block', width: '450px', height:'250px', objectFit:'contain', margin:' 0 auto'}} src={img} alt='error'/>\n       )\n   }\n   \n   export default ErrorMessage;\n   ","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {Component} from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport  ErrorMessage  from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false,\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n        // this.timerId = setInterval(this.updateChar, 5000);\n        \n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerId);\n    }\n\n    \n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n    onCharLoading(){\n        this.setState({\n            loading: true\n        })\n    }\n\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return(\n            <div className=\"randomchar\">\n                {spinner}\n                {content}\n                {errorMessage}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n                \n        )\n        \n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n        imgStyle = {'objectFit' : 'contain'}\n    }\n    \n    return (\n            <div className=\"randomchar__block\">\n                <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n                <div className=\"randomchar__info\">\n                    <p className=\"randomchar__name\">{name}</p>\n                    <p className=\"randomchar__descr\">{description}</p>\n                    <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                     </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './charList.scss';\r\n\r\nclass CharList extends Component {\r\n    state = {\r\n        charList: [],\r\n        loading: true,\r\n        error: false,\r\n        newLoadingItem: false,\r\n        offset: 210,\r\n        charEnded: false\r\n    }\r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        this.onRequest();\r\n        window.addEventListener('scroll', this.onScroll);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.onScroll);\r\n    }\r\n\r\n    itemsRefs = [];\r\n\r\n    setRefs = (ref) => {\r\n        this.itemsRefs.push(ref)\r\n    }\r\n\r\n    onFocusCard = (id) => {\r\n        this.itemsRefs.forEach(item => item.classList.remove('char__item_selected'));\r\n        this.itemsRefs[id].classList.add('char__item_selected');\r\n        this.itemsRefs[id].focus();\r\n    }   \r\n\r\n    onScroll= () => {\r\n        if(this.state.newLoadingItem) return;\r\n        if(this.state.charEnded ) {\r\n            window.addEventListener('scroll', this.onScroll);\r\n        }\r\n        if(window.innerHeight + window.scrollY >= document.body.offsetHeight) {\r\n            this.onRequest(this.state.offset)\r\n        }\r\n    }\r\n\r\n    onRequest = (offset) => {\r\n        this.onCharListLoading()\r\n        this.marvelService.getAllCharacters(offset)\r\n        .then(this.onCharListLoaded)\r\n        .catch(this.onError)\r\n    }\r\n\r\n    onCharListLoading = () => {\r\n        this.setState({\r\n            newLoadingItem: true\r\n        })\r\n    }\r\n\r\n    onCharListLoaded = (newCharList) => {\r\n        let ended = false;\r\n        if (newCharList.length < 9 ){\r\n            ended = true\r\n        }\r\n\r\n        this.setState(({offset, charList}) => ({\r\n            charList: [...charList, ...newCharList],\r\n            loading: false,\r\n            newLoadingItem: false,\r\n            offset: offset + 9,\r\n            charEnded: ended\r\n        }))\r\n    }\r\n\r\n    onError= () => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n   renderItems=(arr) =>{\r\n       const items = arr.map((item, i) => {\r\n           let imgStyle = {'objectFit' : 'cover'}\r\n           if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\r\n               imgStyle = {'objectFit' : 'unset'}\r\n           }\r\n           return (\r\n            <li \r\n                className=\"char__item\"\r\n                tabIndex={0}\r\n                key={item.id}\r\n                ref={this.setRefs}\r\n                onClick={() => {\r\n                    this.props.onSelectedChar(item.id)\r\n                    this.onFocusCard(i)\r\n                    }}\r\n                onKeyPress={ (e) => {\r\n                    if(e.key === '' || e.key === 'Enter') {\r\n                        this.props.onSelectedChar(item.id)\r\n                        this.onFocusCard(i)\r\n                    }\r\n                }} >\r\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\r\n                    <div className=\"char__name\">{item.name}</div>\r\n            </li>\r\n           )\r\n       })\r\n       return (\r\n        <ul className=\"char__grid\">\r\n            {items}\r\n        </ul>\r\n       )\r\n\r\n   }\r\n\r\n    render() {\r\n        const {charList, loading, error, offset, newLoadingItem, charEnded} = this.state\r\n        const items = this.renderItems(charList);\r\n\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error) ? items : null;\r\n\r\n        return (\r\n            <div className=\"char__list\">\r\n                    {spinner}\r\n                    {errorMessage}\r\n                    {content}\r\n                <button \r\n                    className=\"button button__main button__long\"\r\n                    disabled={newLoadingItem}\r\n                    onClick={() => this.onRequest(offset)} \r\n                    style={{'display' : charEnded ? 'none' : 'block'}}>\r\n                    <div className=\"inner\">load more</div>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCharList.propTypes = {\r\n    onSelectedChar: PropTypes.func\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton';\r\n\r\nimport './charInfo.scss';\r\n\r\n\r\nclass CharInfo extends Component {\r\n    state = {\r\n        char: null,\r\n        loading: false,\r\n        error: false\r\n    }\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        this.updateChar();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.charId !== prevProps.charId) {\r\n            this.updateChar()\r\n        }\r\n    }\r\n\r\n    updateChar = () => {\r\n       const {charId} = this.props;\r\n       if(!charId) {\r\n           return;\r\n       }\r\n\r\n       this.onCharLoading() \r\n\r\n       this.marvelService\r\n        .getCharacter(charId)\r\n        .then(this.onCharLoaded)\r\n        .catch(this.onError)\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    onCharLoading = () =>{\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n\r\n    onError= () => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {char, loading, error} = this.state;\r\n\r\n        const skeleton = char || loading || error ? null : <Skeleton/>;\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n\r\n        return (\r\n            <div className=\"char__info\">\r\n                {skeleton}\r\n                {spinner}\r\n                {content}\r\n                {errorMessage}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, homepage, wiki, thumbnail, description, comics} = char;\r\n    let imgStyle = {'objectFit' : \"contain\"}\r\n    if(thumbnail === \"'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\"){\r\n        imgStyle = {\"objectFit\" : \"unset\"}\r\n    }\r\n    return(\r\n        <>\r\n             <div className=\"char__basics\">\r\n                    <img src={thumbnail} alt={name} style={imgStyle}/>\r\n                    <div>\r\n                        <div className=\"char__info-name\">thor</div>\r\n                        <div className=\"char__btns\">\r\n                            <a href={homepage} className=\"button button__main\">\r\n                                <div className=\"inner\">homepage</div>\r\n                            </a>\r\n                            <a href={wiki} className=\"button button__secondary\">\r\n                                <div className=\"inner\">Wiki</div>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"char__descr\">\r\n                    {description}\r\n                </div>\r\n                <div className=\"char__comics\">Comics:</div>\r\n                <ul className=\"char__comics-list\">\r\n                    {comics.length > 0 ? null : \"There are no comics for this character\"}\r\n                    {\r\n                        comics.map((item, i) => {\r\n                            \r\n                            return(\r\n                                <li className=\"char__comics-item\" key={i}>\r\n                                    {item.name}\r\n                                </li> \r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n        </>\r\n    )\r\n}\r\nCharInfo.propTypes = {\r\n    charId: PropTypes.number\r\n}\r\n\r\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo){\r\n        console.log(error, errorInfo)\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n    render() {\r\n        if(this.state.error){\r\n            return <ErrorMessage/>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\r\n\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        selectedChar: null\r\n    }\r\n\r\n    onSelectedChar = (id) => {\r\n        this.setState({\r\n            selectedChar: id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                    <AppHeader/>\r\n                <main>\r\n                    <ErrorBoundary>\r\n                        <RandomChar/>\r\n                    </ErrorBoundary>\r\n                    <div className=\"char__content\">\r\n                        <ErrorBoundary>\r\n                            <CharList onSelectedChar={this.onSelectedChar}/>\r\n                        </ErrorBoundary>\r\n                        <ErrorBoundary>\r\n                            <CharInfo charId={this.state.selectedChar}/>\r\n                        </ErrorBoundary> \r\n                    </div>\r\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}